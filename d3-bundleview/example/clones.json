{"duplicatesPercentage":1.065956029,"nodes":{"children":[{"percentageOfProject":0.04996668887,"id":11,"children":[{"attributes":{"LOC":6,"path":"/src/smallsql/database/Utils.java","percentageOfClass":50.0,"percentageOfProject":0.02498334444,"endLine":322,"startLine":317,"file":"Utils.java","clone":"{\r\n        try{\r\n            return Double.parseDouble( val ) != 0;\r\n        }catch(NumberFormatException e){/*ignore it if it not a number*/}\r\n        return \"true\".equalsIgnoreCase( val ) || \"yes\".equalsIgnoreCase( val ) || \"t\".equalsIgnoreCase( val );\r\n    }"},"id":12},{"attributes":{"LOC":6,"path":"/src/smallsql/junit/BasicTestCase.java","percentageOfClass":50.0,"percentageOfProject":0.02498334444,"endLine":196,"startLine":191,"file":"BasicTestCase.java","clone":"{\r\n        try{\r\n            return Double.parseDouble( val ) != 0;\r\n        }catch(NumberFormatException e){/*ignore it if it not a number*/}\r\n        return \"true\".equalsIgnoreCase( val ) || \"yes\".equalsIgnoreCase( val ) || \"t\".equalsIgnoreCase( val );\r\n    }"},"id":13}]},{"percentageOfProject":0.04996668887,"id":14,"children":[{"attributes":{"LOC":4,"path":"/src/smallsql/junit/TestThreads.java","percentageOfClass":33.33333333,"percentageOfProject":0.01665556296,"endLine":110,"startLine":106,"file":"TestThreads.java","clone":"// wait until all threads are finish\r\n            for(int i = 0; i < threadList.size(); i++){\r\n                Thread thread = (Thread)threadList.get(i);\r\n                thread.join(5000);\r\n            }"},"id":15},{"attributes":{"LOC":4,"path":"/src/smallsql/junit/TestThreads.java","percentageOfClass":33.33333333,"percentageOfProject":0.01665556296,"endLine":63,"startLine":59,"file":"TestThreads.java","clone":"// wait until all threads are finish\r\n        for(int i = 0; i < threadList.size(); i++){\r\n            Thread thread = (Thread)threadList.get(i);\r\n            thread.join(5000);\r\n        }"},"id":16},{"attributes":{"LOC":4,"path":"/src/smallsql/junit/TestThreads.java","percentageOfClass":33.33333333,"percentageOfProject":0.01665556296,"endLine":164,"startLine":160,"file":"TestThreads.java","clone":"// wait until all threads are finish\r\n            for(int i = 0; i < threadList.size(); i++){\r\n                Thread thread = (Thread)threadList.get(i);\r\n                thread.join(5000);\r\n            }"},"id":17}]},{"percentageOfProject":0.0416389074,"id":18,"children":[{"attributes":{"LOC":5,"path":"/src/smallsql/database/ExpressionFunctionConvert.java","percentageOfClass":50.0,"percentageOfProject":0.0208194537,"endLine":157,"startLine":153,"file":"ExpressionFunctionConvert.java","clone":"{\r\n\t\t\t\t\tbyte[] buffer = new byte[length];\r\n\t\t\t\t\tSystem.arraycopy(bytes, 0, buffer, 0, Math.min(bytes.length,length) );\r\n\t\t\t\t\treturn buffer;\r\n\t\t\t\t}"},"id":19},{"attributes":{"LOC":5,"path":"/src/smallsql/database/ExpressionFunctionConvert.java","percentageOfClass":50.0,"percentageOfProject":0.0208194537,"endLine":146,"startLine":142,"file":"ExpressionFunctionConvert.java","clone":"{\r\n\t\t\t\t\tbyte[] buffer = new byte[length];\r\n\t\t\t\t\tSystem.arraycopy(bytes, 0, buffer, 0, Math.min(bytes.length,length) );\r\n\t\t\t\t\treturn buffer;\r\n\t\t\t\t}"},"id":110}]},{"percentageOfProject":0.0416389074,"id":111,"children":[{"attributes":{"LOC":5,"path":"/src/smallsql/junit/TestOrderBy.java","percentageOfClass":50.0,"percentageOfProject":0.0208194537,"endLine":435,"startLine":431,"file":"TestOrderBy.java","clone":"while(rs.next()){\r\n\t\t\tassertTrue( oldValue.compareTo( (Integer)rs.getObject(\"i\") ) < 0 );\r\n\t\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\t\tcount++;\r\n\t\t}"},"id":112},{"attributes":{"LOC":5,"path":"/src/smallsql/junit/TestOrderBy.java","percentageOfClass":50.0,"percentageOfProject":0.0208194537,"endLine":350,"startLine":346,"file":"TestOrderBy.java","clone":"while(rs.next()){\r\n\t\t\tassertTrue( oldValue.compareTo( (Integer)rs.getObject(\"i\") ) < 0 );\r\n\t\t\toldValue = (Integer)rs.getObject(\"i\");\r\n\t\t\tcount++;\r\n\t\t}"},"id":113}]},{"percentageOfProject":0.09160559627,"id":114,"children":[{"attributes":{"LOC":11,"path":"/src/smallsql/database/IndexScrollStatus.java","percentageOfClass":50.0,"percentageOfProject":0.04580279813,"endLine":131,"startLine":120,"file":"IndexScrollStatus.java","clone":"if(status.nodeValue != null){\r\n\t\t\t\t\t\tif(status.nodeValue instanceof IndexNode){\r\n\t\t\t\t\t\t\tlevel++;\r\n\t\t\t\t\t\t\tnodeStack.push(\r\n\t\t\t\t\t\t\t\tnew IndexNodeScrollStatus( \t(IndexNode)status.nodeValue, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(expressions.get(level).getAlias() != SQLTokenizer.DESC_STR), \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscroll, level));\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}else\r\n\t\t\t\t\t\t\treturn getReturnValue(status.nodeValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//There is no RowOffset in this node"},"id":115},{"attributes":{"LOC":11,"path":"/src/smallsql/database/IndexScrollStatus.java","percentageOfClass":50.0,"percentageOfProject":0.04580279813,"endLine":99,"startLine":89,"file":"IndexScrollStatus.java","clone":"if(status.nodeValue != null){\r\n\t\t\t\t\t\tif(status.nodeValue instanceof IndexNode){\r\n\t\t\t\t\t\t\tlevel++;\r\n\t\t\t\t\t\t\tnodeStack.push(\r\n\t\t\t\t\t\t\t\tnew IndexNodeScrollStatus( \t(IndexNode)status.nodeValue, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(expressions.get(level).getAlias() != SQLTokenizer.DESC_STR), \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscroll, level));\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}else\r\n\t\t\t\t\t\t\treturn getReturnValue(status.nodeValue);\r\n\t\t\t\t\t}"},"id":116}]},{"percentageOfProject":0.09160559627,"id":117,"children":[{"attributes":{"LOC":11,"path":"/src/smallsql/database/ExpressionFunctionTruncate.java","percentageOfClass":50.0,"percentageOfProject":0.04580279813,"endLine":60,"startLine":50,"file":"ExpressionFunctionTruncate.java","clone":"if(places > 0){\r\n\t\t\tfor(int i=0; i<places; i++){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue *= factor;\r\n\t\t}else{\r\n\t\t\tfor(int i=0; i>places; i--){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue /= factor;\r\n\t\t}"},"id":118},{"attributes":{"LOC":11,"path":"/src/smallsql/database/ExpressionFunctionRound.java","percentageOfClass":50.0,"percentageOfProject":0.04580279813,"endLine":60,"startLine":50,"file":"ExpressionFunctionRound.java","clone":"if(places > 0){\r\n\t\t\tfor(int i=0; i<places; i++){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue *= factor;\r\n\t\t}else{\r\n\t\t\tfor(int i=0; i>places; i--){\r\n\t\t\t\tfactor *= 10;\r\n\t\t\t}\r\n\t\t\tvalue /= factor;\r\n\t\t}"},"id":119}]},{"percentageOfProject":0.008327781479,"id":120,"children":[{"attributes":{"LOC":1,"path":"/src/smallsql/database/SSDatabaseMetaData.java","percentageOfClass":50.0,"percentageOfProject":0.00416389074,"endLine":753,"startLine":753,"file":"SSDatabaseMetaData.java","clone":"String[] colNames = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\"};"},"id":121},{"attributes":{"LOC":1,"path":"/src/smallsql/junit/TestDBMetaData.java","percentageOfClass":50.0,"percentageOfProject":0.00416389074,"endLine":182,"startLine":182,"file":"TestDBMetaData.java","clone":"String[] colNames = {\"TABLE_CAT\", \"TABLE_SCHEM\", \"TABLE_NAME\", \"COLUMN_NAME\", \"DATA_TYPE\", \"TYPE_NAME\", \"COLUMN_SIZE\", \"BUFFER_LENGTH\", \"DECIMAL_DIGITS\", \"NUM_PREC_RADIX\", \"NULLABLE\", \"REMARKS\", \"COLUMN_DEF\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"CHAR_OCTET_LENGTH\", \"ORDINAL_POSITION\", \"IS_NULLABLE\"};"},"id":122}]},{"percentageOfProject":0.02498334444,"id":123,"children":[{"attributes":{"LOC":3,"path":"/src/smallsql/junit/BenchTest.java","percentageOfClass":50.0,"percentageOfProject":0.01249167222,"endLine":123,"startLine":121,"file":"BenchTest.java","clone":"if (count != rowCount)\r\n                System.out.println( \"  Failed: Only \" + count + \" rows were inserted.\");\r\n            else System.out.println( \"  Test time: \" + time + \" ms\");"},"id":124},{"attributes":{"LOC":3,"path":"/src/smallsql/junit/BenchTest.java","percentageOfClass":50.0,"percentageOfProject":0.01249167222,"endLine":182,"startLine":180,"file":"BenchTest.java","clone":"if (count != rowCount)\r\n                 System.out.println( \"  Failed: Only \" + count + \" rows were inserted.\");\r\n            else System.out.println( \"  Test time: \" + time + \" ms\");"},"id":125}]},{"percentageOfProject":0.01665556296,"id":126,"children":[{"attributes":{"LOC":2,"path":"/src/smallsql/database/Index.java","percentageOfClass":50.0,"percentageOfProject":0.008327781479,"endLine":409,"startLine":407,"file":"Index.java","clone":"// the first digit include 0-null; 1-empty; 2 another value\r\n\t\t\tchar digit = (i<0) ? (length == 0 ? (char)1 : 2)\r\n\t\t\t\t\t\t\t  : (key[i]);"},"id":127},{"attributes":{"LOC":2,"path":"/src/smallsql/database/Index.java","percentageOfClass":50.0,"percentageOfProject":0.008327781479,"endLine":384,"startLine":382,"file":"Index.java","clone":"// the first digit include 0-null; 1-empty; 2 another value\r\n\t\t\tchar digit = (i<0) ? (length == 0 ? (char)1 : 2)\r\n\t\t\t\t\t\t\t  : (key[i]);"},"id":128}]},{"percentageOfProject":0.06662225183,"id":129,"children":[{"attributes":{"LOC":8,"path":"/src/smallsql/junit/TestOrderBy.java","percentageOfClass":50.0,"percentageOfProject":0.03331112592,"endLine":218,"startLine":211,"file":"TestOrderBy.java","clone":"while(oldValue != null && rs.next()){\r\n\t\t\tString newValue = rs.getString(\"v\");\r\n\t\t\tif(newValue != null){\r\n\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\toldValue = newValue;\r\n\t\t}"},"id":130},{"attributes":{"LOC":8,"path":"/src/smallsql/junit/TestOrderBy.java","percentageOfClass":50.0,"percentageOfProject":0.03331112592,"endLine":246,"startLine":239,"file":"TestOrderBy.java","clone":"while(oldValue != null && rs.next()){\r\n\t\t\tString newValue = rs.getString(\"v\");\r\n\t\t\tif(newValue != null){\r\n\t\t\t\tassertTrue( oldValue.compareTo( newValue ) > 0 );\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\toldValue = newValue;\r\n\t\t}"},"id":131}]},{"percentageOfProject":0.07495003331,"id":132,"children":[{"attributes":{"LOC":9,"path":"/src/smallsql/database/TableView.java","percentageOfClass":50.0,"percentageOfProject":0.03747501666,"endLine":113,"startLine":105,"file":"TableView.java","clone":"catch(Throwable e){\r\n\t\t\tif(raFile != null)\r\n\t\t\t\ttry{\r\n\t\t\t\t\traFile.close();\r\n\t\t\t\t}catch(Exception e2){\r\n\t\t\t\t\tDriverManager.println(e2.toString());\r\n\t\t\t\t}\r\n\t\t\tthrow SmallSQLException.createFromException(e);\r\n\t\t}"},"id":133},{"attributes":{"LOC":9,"path":"/src/smallsql/database/IndexDescription.java","percentageOfClass":50.0,"percentageOfProject":0.03747501666,"endLine":194,"startLine":186,"file":"IndexDescription.java","clone":"catch(Throwable e){\r\n            if(raFile != null)\r\n                try{\r\n                    raFile.close();\r\n                }catch(Exception e2){\r\n                    DriverManager.println(e2.toString());\r\n                }\r\n            throw SmallSQLException.createFromException(e);\r\n        }"},"id":134}]},{"percentageOfProject":0.07495003331,"id":135,"children":[{"attributes":{"LOC":9,"path":"/src/smallsql/database/SSCallableStatement.java","percentageOfClass":50.0,"percentageOfProject":0.03747501666,"endLine":125,"startLine":117,"file":"SSCallableStatement.java","clone":"{\r\n        try{\r\n            Expression expr = getValue(i);\r\n            wasNull = expr.isNull();\r\n            return expr.getLong();\r\n        }catch(Exception e){\r\n            throw SmallSQLException.createFromException( e );\r\n        }\r\n    }"},"id":136},{"attributes":{"LOC":9,"path":"/src/smallsql/database/SSCallableStatement.java","percentageOfClass":50.0,"percentageOfProject":0.03747501666,"endLine":143,"startLine":135,"file":"SSCallableStatement.java","clone":"{\r\n        try{\r\n            Expression expr = getValue(i);\r\n            wasNull = expr.isNull();\r\n            return expr.getLong();\r\n        }catch(Exception e){\r\n            throw SmallSQLException.createFromException( e );\r\n        }\r\n    }"},"id":137}]},{"percentageOfProject":0.008327781479,"id":138,"children":[{"attributes":{"LOC":1,"path":"/src/smallsql/database/SSDatabaseMetaData.java","percentageOfClass":50.0,"percentageOfProject":0.00416389074,"endLine":831,"startLine":831,"file":"SSDatabaseMetaData.java","clone":"String[] colNames = {\t\t\"TYPE_NAME\", \t\t\t\t\"DATA_TYPE\", \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"PRECISION\", \t\"LITERAL_PREFIX\", \"LITERAL_SUFFIX\", \t\t\"CREATE_PARAMS\", \"NULLABLE\", \t \"CASE_SENSITIVE\", \"SEARCHABLE\", \"UNSIGNED_ATTRIBUTE\", \"FIXED_PREC_SCALE\", \"AUTO_INCREMENT\", \"LOCAL_TYPE_NAME\", \"MINIMUM_SCALE\", \"MAXIMUM_SCALE\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"NUM_PREC_RADIX\"};"},"id":139},{"attributes":{"LOC":1,"path":"/src/smallsql/junit/TestDBMetaData.java","percentageOfClass":50.0,"percentageOfProject":0.00416389074,"endLine":210,"startLine":210,"file":"TestDBMetaData.java","clone":"String[] colNames = {\"TYPE_NAME\", \"DATA_TYPE\", \"PRECISION\", \"LITERAL_PREFIX\", \"LITERAL_SUFFIX\", \"CREATE_PARAMS\", \"NULLABLE\", \"CASE_SENSITIVE\", \"SEARCHABLE\", \"UNSIGNED_ATTRIBUTE\", \"FIXED_PREC_SCALE\", \"AUTO_INCREMENT\", \"LOCAL_TYPE_NAME\", \"MINIMUM_SCALE\", \"MAXIMUM_SCALE\", \"SQL_DATA_TYPE\", \"SQL_DATETIME_SUB\", \"NUM_PREC_RADIX\"};"},"id":140}]},{"percentageOfProject":0.06662225183,"id":141,"children":[{"attributes":{"LOC":8,"path":"/src/smallsql/junit/BasicTestCase.java","percentageOfClass":50.0,"percentageOfProject":0.03331112592,"endLine":109,"startLine":102,"file":"BasicTestCase.java","clone":"{\r\n\t\tStringBuffer buf = new StringBuffer(bytes.length << 1);\r\n\t\tfor(int i=0; i<bytes.length; i++){\r\n\t\t\tbuf.append( digits[ (bytes[i] >> 4) & 0x0F ] );\r\n\t\t\tbuf.append( digits[ (bytes[i]     ) & 0x0F ] );\r\n\t\t}\r\n\t\treturn buf.toString();\r\n\t}"},"id":142},{"attributes":{"LOC":8,"path":"/src/smallsql/database/Utils.java","percentageOfClass":50.0,"percentageOfProject":0.03331112592,"endLine":212,"startLine":205,"file":"Utils.java","clone":"{\r\n        StringBuffer buf = new StringBuffer(bytes.length << 1);\r\n        for(int i=0; i<bytes.length; i++){\r\n            buf.append( digits[ (bytes[i] >> 4) & 0x0F ] );\r\n            buf.append( digits[ (bytes[i]     ) & 0x0F ] );\r\n        }\r\n        return buf.toString();\r\n    }"},"id":143}]},{"percentageOfProject":0.04996668887,"id":144,"children":[{"attributes":{"LOC":6,"path":"/src/smallsql/junit/BenchTest.java","percentageOfClass":50.0,"percentageOfProject":0.02498334444,"endLine":328,"startLine":322,"file":"BenchTest.java","clone":"// There are not the correct count of rows.\r\n                if (count == 0){\r\n                    createTestDataWithClassicInsert( con );\r\n                    rs = st1.executeQuery( \"SELECT count(*) FROM \" + tableName);\r\n                    rs.next();\r\n                    count = rs.getInt(1);\r\n                }"},"id":145},{"attributes":{"LOC":6,"path":"/src/smallsql/junit/BenchTest.java","percentageOfClass":50.0,"percentageOfProject":0.02498334444,"endLine":214,"startLine":208,"file":"BenchTest.java","clone":"// There are not the correct count of rows.\r\n                if (count == 0){\r\n                    createTestDataWithClassicInsert( con );\r\n                    rs = st1.executeQuery( \"SELECT count(*) FROM \" + tableName);\r\n                    rs.next();\r\n                    count = rs.getInt(1);\r\n                }"},"id":146}]},{"percentageOfProject":0.04996668887,"id":147,"children":[{"attributes":{"LOC":6,"path":"/src/smallsql/database/SQLParser.java","percentageOfClass":50.0,"percentageOfProject":0.02498334444,"endLine":1937,"startLine":1932,"file":"SQLParser.java","clone":"try{\r\n            int maxRows = Integer.parseInt(token.getName(sql));\r\n            selCmd.setMaxRows(maxRows);\r\n        }catch(NumberFormatException e){\r\n            throw createSyntaxError(token, Language.STXADD_NOT_NUMBER, token.getName(sql));\r\n        }"},"id":148},{"attributes":{"LOC":6,"path":"/src/smallsql/database/SQLParser.java","percentageOfClass":50.0,"percentageOfProject":0.02498334444,"endLine":357,"startLine":352,"file":"SQLParser.java","clone":"try{\r\n\t\t\t\t\t\tint maxRows = Integer.parseInt(token.getName(sql));\r\n\t\t\t\t\t\tselCmd.setMaxRows(maxRows);\r\n\t\t\t\t\t}catch(NumberFormatException e){\r\n\t\t\t\t\t\tthrow createSyntaxError(token, Language.STXADD_NOT_NUMBER, token.getName(sql));\r\n\t\t\t\t\t}"},"id":149}]},{"percentageOfProject":0.1499000666,"id":150,"children":[{"attributes":{"LOC":9,"path":"/src/smallsql/junit/TestFunctions.java","percentageOfClass":25.0,"percentageOfProject":0.03747501666,"endLine":383,"startLine":374,"file":"TestFunctions.java","clone":"{\r\n        try{\r\n            Connection con = AllTests.getConnection();\r\n            Statement st = con.createStatement();\r\n            st.execute(\"drop table \" + table);\r\n            st.close();\r\n        }catch(Throwable e){\r\n            //e.printStackTrace();\r\n        }\r\n    }"},"id":151},{"attributes":{"LOC":9,"path":"/src/smallsql/junit/TestDataTypes.java","percentageOfClass":25.0,"percentageOfProject":0.03747501666,"endLine":77,"startLine":68,"file":"TestDataTypes.java","clone":"{\r\n        try{\r\n            Connection con = AllTests.getConnection();\r\n            Statement st = con.createStatement();\r\n            st.execute(\"drop table \" + table);\r\n            st.close();\r\n        }catch(Throwable e){\r\n            //e.printStackTrace();\r\n        }\r\n    }"},"id":152},{"attributes":{"LOC":9,"path":"/src/smallsql/junit/TestOperatoren.java","percentageOfClass":25.0,"percentageOfProject":0.03747501666,"endLine":104,"startLine":95,"file":"TestOperatoren.java","clone":"{\r\n        try{\r\n            Connection con = AllTests.getConnection();\r\n            Statement st = con.createStatement();\r\n            st.execute(\"drop table \" + table);\r\n            st.close();\r\n        }catch(Throwable e){\r\n            //e.printStackTrace();\r\n        }\r\n    }"},"id":153},{"attributes":{"LOC":9,"path":"/src/smallsql/junit/TestMoneyRounding.java","percentageOfClass":25.0,"percentageOfProject":0.03747501666,"endLine":62,"startLine":53,"file":"TestMoneyRounding.java","clone":"{\r\n        try{\r\n            Connection con = AllTests.getConnection();\r\n            Statement st = con.createStatement();\r\n            st.execute(\"drop table \" + table);\r\n            st.close();\r\n        }catch(Throwable e){\r\n            //e.printStackTrace();\r\n        }\r\n    }"},"id":154}]},{"percentageOfProject":0.04996668887,"id":155,"children":[{"attributes":{"LOC":6,"path":"/src/smallsql/junit/TestOrderBy.java","percentageOfClass":50.0,"percentageOfProject":0.02498334444,"endLine":192,"startLine":187,"file":"TestOrderBy.java","clone":"while(rs.next()){\r\n\t\t\tString newValue = rs.getString(\"v\");\r\n\t\t\tassertTrue( oldValue.compareTo( newValue ) < 0 );\r\n\t\t\toldValue = newValue;\r\n\t\t\tcount++;\r\n\t\t}"},"id":156},{"attributes":{"LOC":6,"path":"/src/smallsql/junit/TestOrderBy.java","percentageOfClass":50.0,"percentageOfProject":0.02498334444,"endLine":816,"startLine":811,"file":"TestOrderBy.java","clone":"while(rs.next()){\r\n\t\t\tString newValue = rs.getString(\"v\");\r\n\t\t\tassertTrue( oldValue.compareTo( newValue ) < 0 );\r\n\t\t\toldValue = newValue;\r\n\t\t\tcount++;\r\n\t\t}"},"id":157}]},{"percentageOfProject":0.05829447035,"id":158,"children":[{"attributes":{"LOC":7,"path":"/src/smallsql/database/Table.java","percentageOfClass":50.0,"percentageOfProject":0.02914723518,"endLine":376,"startLine":370,"file":"Table.java","clone":"if(serializeConnections.size() > 0){\r\n\t\t\t\t\t\t\tIterator values = locks.values().iterator();\r\n\t\t\t\t\t\t\twhile(values.hasNext()){\r\n\t\t\t\t\t\t\t\tTableStorePage lock = (TableStorePage)values.next();\r\n\t\t\t\t\t\t\t\tif(lock.con != con) return null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}"},"id":159},{"attributes":{"LOC":7,"path":"/src/smallsql/database/Table.java","percentageOfClass":50.0,"percentageOfProject":0.02914723518,"endLine":394,"startLine":388,"file":"Table.java","clone":"if(serializeConnections.size() > 0){\r\n                        Iterator values = locks.values().iterator();\r\n                        while(values.hasNext()){\r\n                            TableStorePage lock = (TableStorePage)values.next();\r\n                            if(lock.con != con) return null;\r\n                        }\r\n                    }"},"id":160}]}]},"relations":[{"target":160,"source":159},{"target":143,"source":142},{"target":152,"source":151},{"target":153,"source":151},{"target":154,"source":151},{"target":153,"source":152},{"target":154,"source":152},{"target":154,"source":153},{"target":110,"source":19},{"target":157,"source":156},{"target":149,"source":148},{"target":122,"source":121},{"target":119,"source":118},{"target":146,"source":145},{"target":128,"source":127},{"target":113,"source":112},{"target":134,"source":133},{"target":131,"source":130},{"target":116,"source":115},{"target":13,"source":12},{"target":16,"source":15},{"target":17,"source":15},{"target":17,"source":16},{"target":137,"source":136},{"target":125,"source":124},{"target":140,"source":139}],"duplicatesLOC":256,"totalLOC":24016}